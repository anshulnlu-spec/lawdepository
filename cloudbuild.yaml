# This file defines the automated build and deployment process.
# It runs every time you push a change to your GitHub repository.

steps:
# Step 1: Build the container image using Docker
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/legal-docs-repo/app:latest', '.']
  id: 'Build'

# Step 2: Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/legal-docs-repo/app:latest']
  id: 'Push'

# Step 3: Deploy the container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'legal-docs-service' # Your service name
    - '--image'
    - 'us-central1-docker.pkg.dev/$PROJECT_ID/legal-docs-repo/app:latest'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--quiet'
    # This securely attaches all your secrets to the application.
    - '--set-secrets'
    - |
      GEMINI_API_KEY=GEMINI_API_KEY:latest,
      DB_PASSWORD=DB_PASSWORD:latest,
      DB_USER=DB_USER:latest,
      DB_NAME=DB_NAME:latest,
      DB_HOST=DB_HOST:latest
    # This connects your service to the Cloud SQL database instance.
    - '--add-cloudsql-instances'
    - 'gen-lang-client-0486914658:us-central1:legal-docs-db' # YOUR DB CONNECTION NAME
    # This makes your service publicly accessible.
    - '--allow-unauthenticated'

# Define the image to be pushed to Artifact Registry
images:
- 'us-central1-docker.pkg.dev/$PROJECT_ID/legal-docs-repo/app:latest'

# Set logging options for the build process
options:
  logging: CLOUD_LOGGING_ONLY

