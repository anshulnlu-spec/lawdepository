steps:
  # 1. Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/legal-docs-repo/app:latest'
      - '.'

  # 2. Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/legal-docs-repo/app:latest'

  # 3. Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'legal-docs-service'
      - '--image=us-central1-docker.pkg.dev/${PROJECT_ID}/legal-docs-repo/app:latest'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      # Connect the service to the database instance
      - '--add-cloudsql-instances=gen-lang-client-0486914658:us-central1:legal-docs-db'
      # Provide ALL secrets the application code needs to run
      - '--update-secrets=GEMINI_API_KEY=GEMINI_API_KEY:latest'
      - '--update-secrets=DB_PASSWORD=DB_PASSWORD:latest'
      - '--update-secrets=DB_USER=DB_USER:latest'
      - '--update-secrets=DB_NAME=DB_NAME:latest'
      - '--update-secrets=DB_HOST=DB_HOST:latest'

# Set the service account for the build
serviceAccount: 'projects/${PROJECT_ID}/serviceAccounts/62820233523-compute@developer.gserviceaccount.com'

# Specify logging options to avoid permissions errors
options:
  logging: CLOUD_LOGGING_ONLY

